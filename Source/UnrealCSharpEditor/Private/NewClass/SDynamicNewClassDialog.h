#pragma once

#include "CoreMinimal.h"
#include "SDynamicClassViewer.h"
#include "GameProjectGeneration/Public/AddToProjectConfig.h"
#include "Layout/Visibility.h"
#include "Widgets/DeclarativeSyntaxSupport.h"
#include "Styling/SlateColor.h"
#include "Input/Reply.h"
#include "NewClass/DynamicNewClassUtils.h"
#include "Widgets/SWidget.h"
#include "Widgets/SCompoundWidget.h"
#include "Widgets/Views/STableViewBase.h"
#include "Widgets/Views/STableRow.h"
#include "Widgets/Input/SComboBox.h"

class IClassViewerFilter;
class SClassViewer;
class SEditableTextBox;
class SWizard;
struct FParentClassItem;

class SDynamicNewClassDialog : public SCompoundWidget
{
public:
	SLATE_BEGIN_ARGS( SDynamicNewClassDialog ) {}

	SLATE_ARGUMENT(TSharedPtr<SWindow>, ParentWindow)

	SLATE_ARGUMENT(TArray<FNewClassInfo>, FeaturedClasses)

	SLATE_ARGUMENT(TSharedPtr<IClassViewerFilter>, ClassViewerFilter)

	SLATE_ARGUMENT(const UClass*, Class)

	SLATE_ARGUMENT(FString, InitialPath)

	SLATE_ARGUMENT(FString, DefaultClassPrefix)
		
	SLATE_ARGUMENT(FString, DefaultClassName)

	SLATE_EVENT( FOnAddedToProject, OnAddedToProject )

	SLATE_END_ARGS()

	void Construct( const FArguments& InArgs );

	virtual FReply OnKeyDown( const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent ) override;

	virtual void Tick( const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime ) override;

private:
	TSharedRef<ITableRow> MakeParentClassListViewWidget(TSharedPtr<FParentClassItem> ParentClassItem, const TSharedRef<STableViewBase>& OwnerTable);

	FText GetSelectedParentClassName() const;
	
	void OnParentClassItemDoubleClicked( TSharedPtr<FParentClassItem> TemplateItem );

	void OnCommonClassSelected(TSharedPtr<FParentClassItem> Item, ESelectInfo::Type SelectInfo);

	void OnClassViewerSelected(TSharedPtr<FDynamicClassViewerNode> Node);

	bool IsFullClassTreeShown() const;

	void OnFullClassTreeChanged(bool bInShowFullClassTree);

	EVisibility GetBasicParentClassVisibility() const;

	EVisibility GetAdvancedParentClassVisibility() const;

	EVisibility GetNameErrorLabelVisibility() const;

	void OnNewClassTypeChanged(const int32 NewTypeIndex);

	FText GetNameErrorLabelText() const;

	void OnNamePageEntered();

	void OnNewClassTypeChanged_Internal(); 
	
	FText GetNameClassTitle() const;

	FText OnGetClassNameText() const;

	void OnClassNameTextChanged(const FText& NewText);

	void OnClassNameTextCommitted(const FText& NewText, ETextCommit::Type CommitType);

	FText OnGetClassPathText() const;

	void OnClassPathTextChanged(const FText& NewText);

	FText OnGetParentClassNameText() const;
	
	FText OnGetDynamicFilePathText() const;

	FString GetDynamicFileName() const;

	void CancelClicked();

	bool CanFinish() const;

	void FinishClicked();
	
	FReply HandleChooseFolderButtonClicked( );

	FText GetSelectedModuleComboText() const;

	void SelectedProjectComboBoxSelectionChanged(TSharedPtr<FProjectContextInfo> Value, ESelectInfo::Type SelectInfo);

	TSharedRef<SWidget> MakeWidgetForSelectedModuleCombo(TSharedPtr<FProjectContextInfo> Value);

private:
	void UpdateInputValidity();

	void SetupDefaultCommonParentClassItems();

	void CloseContainingWindow();

private:
	TSharedPtr<SWizard> MainWizard;
	
	TSharedPtr< SListView< TSharedPtr<FParentClassItem> > > ParentClassListView;
	
	TArray< TSharedPtr<FParentClassItem> > ParentClassItemsSource;

	TSharedPtr<SDynamicClassViewer> DynamicClassViewer;

	FString DefaultClassPrefix;
	
	FString DefaultClassName;

	int32 NewClassTypeIndex;

	TSharedPtr<SEditableTextBox> ClassNameEditBox;

	TSharedPtr<SComboBox<TSharedPtr<FProjectContextInfo>>> AvailableProjectsCombo;

	static FString LastSelectedModuleName;

	FString NewClassName;

	FString NewClassPath;

	FString CalculatedClassHeaderName;

	FString CalculatedClassSourceName;

	FString LastAutoGeneratedClassName;

	TSharedPtr<FDynamicClassViewerNode> SelectedParentClassInfo;

	bool bShowFullClassTree;
	
	double LastPeriodicValidityCheckTime;

	double PeriodicValidityCheckFrequency;

	bool bPreventPeriodicValidityChecksUntilNextChange;

	FText LastInputValidityErrorText;

	bool bLastInputValidityCheckSuccessful;

	TArray<TSharedPtr<FProjectContextInfo>> AvailableProjects;

	TSharedPtr<FProjectContextInfo> SelectedProjectInfo;

	FOnAddedToProject OnAddedToProject;
};
